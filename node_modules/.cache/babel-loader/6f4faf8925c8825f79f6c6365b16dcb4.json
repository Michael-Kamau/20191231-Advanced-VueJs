{"remainingRequest":"/Users/mkamau/Projects/code/Advanced VueJs/node_modules/babel-loader/lib/index.js!/Users/mkamau/Projects/code/Advanced VueJs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mkamau/Projects/code/Advanced VueJs/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mkamau/Projects/code/Advanced VueJs/src/components/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mkamau/Projects/code/Advanced VueJs/src/components/Index.vue","mtime":1577814505277},{"path":"/Users/mkamau/Projects/code/Advanced VueJs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mkamau/Projects/code/Advanced VueJs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mkamau/Projects/code/Advanced VueJs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mkamau/Projects/code/Advanced VueJs/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IFBvc3RDb21wb25lbnQgZnJvbSAiLi9wb3N0L1Bvc3RDb21wb25lbnQiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0luZGV4JywKICBhY3RpdmU6IHRydWUsCiAgLy9wcm9wczpbInByb2R1Y3RzIl0sCiAgY29tcG9uZW50czogewogICAgUG9zdENvbXBvbmVudDogUG9zdENvbXBvbmVudAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRpc3BsYXk6IGZhbHNlLAogICAgICBjb21tZW50czogbnVsbCwKICAgICAgcG9zdEJvZHk6ICcnLAogICAgICBwb3N0VGl0bGU6ICcnLAogICAgICBwb3N0VXNlcklkOiAnJywKICAgICAgcmVzcG9uc2VUaXRsZTogbnVsbCwKICAgICAgcmVzcG9uc2VCb2R5OiBudWxsLAogICAgICBteVBvc3Q6IG51bGwsCiAgICAgIGVycm9yczogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyBQdXNoZXMgcG9zdHMgdG8gdGhlIHNlcnZlciB3aGVuIGNhbGxlZC4KICAgIHBvc3RQb3N0OiBmdW5jdGlvbiBwb3N0UG9zdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGF4aW9zLnBvc3QoImh0dHA6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3Bvc3RzIiwgewogICAgICAgIGJvZHk6IHRoaXMucG9zdEJvZHksCiAgICAgICAgdGl0bGU6IHRoaXMucG9zdFRpdGxlLAogICAgICAgIGlkOiB0aGlzLnBvc3RVc2VySWQKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy5wb3N0Qm9keSA9IG51bGwsIF90aGlzLnBvc3RVc2VySWQgPSBudWxsLCBfdGhpcy5wb3N0VGl0bGUgPSBudWxsOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZQoKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKICAgICAgICBfdGhpcy5yZXNwb25zZUJvZHkgPSByZXNwb25zZS5kYXRhOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIF90aGlzLmVycm9ycy5wdXNoKGUpOwogICAgICB9KTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICBheGlvcy5nZXQoImh0dHA6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3Bvc3RzIikudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgLy8gSlNPTiByZXNwb25zZXMgYXJlIGF1dG9tYXRpY2FsbHkgcGFyc2VkLgogICAgICBfdGhpczIuY29tbWVudHMgPSByZXNwb25zZS5kYXRhOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgX3RoaXMyLmVycm9ycy5wdXNoKGUpOwogICAgfSk7CiAgfQp9Ow=="},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,aAAA,MAAA,sBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,MAAA,EAAA,IAFA;AAGA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA;AADA,GAJA;AAOA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA,IAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,SAAA,EAAA,EAJA;AAKA,MAAA,UAAA,EAAA,EALA;AAMA,MAAA,aAAA,EAAA,IANA;AAOA,MAAA,YAAA,EAAA,IAPA;AAQA,MAAA,MAAA,EAAA,IARA;AASA,MAAA,MAAA,EAAA;AATA,KAAA;AAAA,GAPA;AAkBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,QAFA,sBAEA;AAAA;;AACA,MAAA,KAAA,CAAA,IAAA,8CAAA;AACA,QAAA,IAAA,EAAA,KAAA,QADA;AAEA,QAAA,KAAA,EAAA,KAAA,SAFA;AAGA,QAAA,EAAA,EAAA,KAAA;AAHA,OAAA,EAKA,IALA,CAKA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,IAAA,EACA,KAAA,CAAA,UAAA,GAAA,IADA,EAEA,KAAA,CAAA,SAAA,GAAA,IAFA,CADA,CAIA;;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA;AACA,QAAA,KAAA,CAAA,YAAA,GAAA,QAAA,CAAA,IAAA;AACA,OAZA,EAaA,KAbA,CAaA,UAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AACA,OAfA;AAiBA;AApBA,GAlBA;AAyCA,EAAA,OAzCA,qBAyCA;AAAA;;AACA,IAAA,KAAA,CAAA,GAAA,8CACA,IADA,CACA,UAAA,QAAA,EAAA;AACA;AACA,MAAA,MAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA;AACA,KAJA,EAKA,KALA,CAKA,UAAA,CAAA,EAAA;AACA,MAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AACA,KAPA;AASA;AAnDA,CAAA","sourcesContent":["<template>\n    <!-- Your HTML goes here -->\n    <div class=\"home\" >\n        <h1>Welcome to the Comments Section</h1>\n\n        <div class=\"main_container\">\n            <div class=\"myForm\">\n                <form >\n                    <div class=\"row\">\n                        <div class=\"col-25\">\n                            <label for=\"uid\">Your Id</label>\n                        </div>\n                        <div class=\"col-75\">\n                            <input type=\"number\" id=\"uid\" name=\"uid\"  v-model=\"postUserId\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-25\">\n                            <label for=\"title\">Title</label>\n                        </div>\n                        <div class=\"col-75\">\n                            <input type=\"text\" id=\"title\" name=\"title\"  v-model=\"postTitle\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-25\">\n                            <label for=\"body\">Body</label>\n                        </div>\n                        <div class=\"col-75\">\n                            <textarea id=\"body\" name=\"body\" style=\"height:200px\" v-model=\"postBody\"></textarea>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <input type=\"button\" value=\"Submit Post\" @click=\"postPost()\">\n                    </div>\n                </form>\n\n                <div v-if=\"responseBody\">\n                    <PostComponent v-bind:comment=\"responseBody\"/>\n\n                </div>\n            </div>\n\n            <div class=\"posts\" >\n                <div v-for=\"comment in comments\" :key=\"comment.id\">\n                <PostComponent v-bind:comment=\"comment\"/>\n                </div>\n\n\n            </div>\n        </div>\n\n\n\n    </div>\n</template>\n<script>\n    import axios from 'axios'\n    import PostComponent from \"./post/PostComponent\";\n\n    export default {\n        name: 'Index',\n        active: true,\n        //props:[\"products\"],\n        components: {\n            PostComponent\n        },\n        data: () => ({\n            display: false,\n            comments: null,\n            postBody: '',\n            postTitle:'',\n            postUserId:'',\n            responseTitle:null,\n            responseBody:null,\n            myPost:null,\n            errors: []\n        }),\n        methods: {\n            // Pushes posts to the server when called.\n            postPost() {\n                axios.post(`http://jsonplaceholder.typicode.com/posts`, {\n                    body: this.postBody,\n                    title:this.postTitle,\n                    id:this.postUserId,\n                })\n                    .then(response => {\n                        this.postBody=null,\n                            this.postUserId=null,\n                            this.postTitle=null\n                        // eslint-disable-next-line no-console\n                        console.log(response.data)\n                        this.responseBody=response.data;\n                    })\n                    .catch(e => {\n                        this.errors.push(e)\n                    })\n\n            }\n\n        },\n        created() {\n            axios.get(`http://jsonplaceholder.typicode.com/posts`)\n                .then(response => {\n                    // JSON responses are automatically parsed.\n                    this.comments = response.data\n                })\n                .catch(e => {\n                    this.errors.push(e)\n                })\n\n        },\n\n\n    }\n\n\n</script>\n\n<style scoped>\n\n    .myForm{\n        width:40%;\n    }\n\n    * {\n        box-sizing: border-box;\n    }\n\n    input[type=number],input[type=text], select, textarea {\n        width: 100%;\n        padding: 12px;\n        border: 1px solid #ccc;\n        border-radius: 4px;\n        resize: vertical;\n    }\n\n    label {\n        padding: 12px 12px 12px 0;\n        display: inline-block;\n    }\n\n    input[type=button] {\n        background-color: #4CAF50;\n        color: white;\n        padding: 12px 20px;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        float: right;\n    }\n\n    input[type=button]:hover {\n        background-color: #45a049;\n    }\n\n    .container {\n        border-radius: 5px;\n        background-color: #f2f2f2;\n        padding: 20px;\n    }\n\n    .col-25 {\n        float: left;\n        width: 25%;\n        margin-top: 6px;\n    }\n\n    .col-75 {\n        float: left;\n        width: 75%;\n        margin-top: 6px;\n    }\n\n    /* Clear floats after the columns */\n    .row:after {\n        content: \"\";\n        display: table;\n        clear: both;\n    }\n\n    /* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */\n    @media screen and (max-width: 600px) {\n        .col-25, .col-75, input[type=submit] {\n            width: 100%;\n            margin-top: 0;\n        }\n    }\n\n\n    .main_container{\n        display: flex;\n    }\n\n    .posts{\n        width: 50%;\n        margin :0px 20px 50px 20px;\n        overflow:scroll;\n        height:480px;\n    }\n</style>\n"],"sourceRoot":"src/components"}]}